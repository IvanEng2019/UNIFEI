/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CONTROL.ControlProfessor;
import MODEL.ModelProfessor;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JTextField;

/**
 *
 * @author Bruno
 */
public class ViewProfessor extends javax.swing.JFrame {

    private ControlProfessor controlProfessor;
    private int nInteracoesNaoSalvas = 0;
    private ArrayList<ModelProfessor> lstProfessorView = new ArrayList<>();
    private DefaultListModel<String> dlmProfessorView = new DefaultListModel<>();

    public ViewProfessor(ControlProfessor cr) {
        controlProfessor = cr;
        initComponents();
    }

    private void carregaProfessores() {
        lstProfessorView = controlProfessor.getLstProfessor();
        dlmProfessorView.clear();
        for (ModelProfessor lstProfessorView1 : lstProfessorView) {
            dlmProfessorView.addElement(lstProfessorView1.getNome());
        }
        if (lstProfessorView.size() > 0) {
            try {
                carregaLabels(0);
            } catch (Exception ex) {
                jlblStatusVisual.setText(ex.getMessage());
                Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jbtnAnteriorProf.setEnabled(false);
            jbtnProxProf.setEnabled(false);
            dlmProfessorView.addElement("Nenhum professor encontrado");
        }
    }

    private void carregaLabels(int index) throws Exception {
        if (index >= lstProfessorView.size() || (index < 0)) {
            throw new Exception("Index fora de limites. [" +index+ "]");
        } else {
            jlblNomeProfVisual.setText(lstProfessorView.get(index).getNome());
            jlblCpfProfVisual.setText(lstProfessorView.get(index).getCpf());
            jlblAtua.setText(lstProfessorView.get(index).getAtua());
            jlblContadorAtual.setText("" + (1 + index));
            jlblContadorTotalProfessores.setText("" + lstProfessorView.size());
            defineProxAnteriorEnable(index);
        }
    }

        private void defineProxAnteriorEnable(int index) {
        if (index > 0) {
            jbtnAnteriorProf.setEnabled(true);
        } else {
            jbtnAnteriorProf.setEnabled(false);
        }
        if (index >= (lstProfessorView.size() - 1)) {
            jbtnProxProf.setEnabled(false);
        } else {
            jbtnProxProf.setEnabled(true);
        }
    }
    
    public String[] getDadosProf() {
        String dadosProf[] = new String[3];
        dadosProf[0] = getJtxtNomeProf();
        dadosProf[1] = getJtxtCpfProf();
        dadosProf[2] = getJcbbProfessor();
        return dadosProf;
    }

    public String getJcbbProfessor() {
        return jcbbProfessor.getSelectedItem().toString();
    }

    public void setJcbbProfessor(JComboBox jcbbProfessor) {
        this.jcbbProfessor.setSelectedItem(jcbbProfessor.getSelectedItem());
    }
    
    

    public String getJtxtCpfProf() {
        return jtxtCpfProf.getText();
    }

    public void setJtxtCpfProf(JTextField jtxtCpfProf) {
        jtxtCpfProf.setText(jtxtCpfProf.getText());
    }

    public String getJtxtNomeProf() {
        return jtxtNomeProf.getText();
    }

    public void setJtxtNomeProf(JTextField jtxtNomeProf) {
        jtxtNomeProf.setText(jtxtNomeProf.getText());
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtbpProfessor = new javax.swing.JTabbedPane();
        jpnlProfessorView = new javax.swing.JPanel();
        jlblStatusVisual = new javax.swing.JLabel();
        jpnlContainerProfessor = new javax.swing.JPanel();
        jbtnAnteriorProf = new javax.swing.JButton();
        jbtnProxProf = new javax.swing.JButton();
        jlblNomeProfVisualEstatico = new javax.swing.JLabel();
        jlblNomeProfVisual = new javax.swing.JLabel();
        jlblCpfProfVisual = new javax.swing.JLabel();
        jlblCpfProfEstatico = new javax.swing.JLabel();
        jlblContadorAtualView = new javax.swing.JLabel();
        jlblContadorAtual = new javax.swing.JLabel();
        jlblContadorTotalView = new javax.swing.JLabel();
        jlblContadorTotalProfessores = new javax.swing.JLabel();
        jlblAtuaView = new javax.swing.JLabel();
        jlblAtua = new javax.swing.JLabel();
        lpnlContainerMinistra = new javax.swing.JPanel();
        jlbSupervisiona = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlstSupervisiona = new javax.swing.JList();
        jpnlContanierTodosProfessores = new javax.swing.JPanel();
        jlblTodosProfessores = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        carregaProfessores();
        jlstTodosProfessores = new javax.swing.JList(dlmProfessorView);
        jpnlProfessorCad = new javax.swing.JPanel();
        jpnlContainerProfCad = new javax.swing.JPanel();
        jlblNomeProf = new javax.swing.JLabel();
        jlblCpfProf = new javax.swing.JLabel();
        jtxtNomeProf = new javax.swing.JTextField();
        jtxtCpfProf = new javax.swing.JTextField();
        jlblProfessor = new javax.swing.JLabel();
        jcbbProfessor = new javax.swing.JComboBox();
        jbtnCadastrar = new javax.swing.JButton();
        jbtnSalvarProf = new javax.swing.JButton();
        jbtnDescartarProf = new javax.swing.JButton();
        jlblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jlblStatusVisual.setText("Utilize esta tela para visualizar os professores e suas turmas.");

        jbtnAnteriorProf.setText("ANTERIOR");
        jbtnAnteriorProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAnteriorProfActionPerformed(evt);
            }
        });

        jbtnProxProf.setText("PROX");
        jbtnProxProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProxProfActionPerformed(evt);
            }
        });

        jlblNomeProfVisualEstatico.setText("NOME");

        jlblCpfProfEstatico.setText("CPF");

        jlblContadorAtualView.setText("ATUAL");

        jlblContadorTotalView.setText("TOTAL");

        jlblAtuaView.setText("ATUA");

        javax.swing.GroupLayout jpnlContainerProfessorLayout = new javax.swing.GroupLayout(jpnlContainerProfessor);
        jpnlContainerProfessor.setLayout(jpnlContainerProfessorLayout);
        jpnlContainerProfessorLayout.setHorizontalGroup(
            jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                        .addComponent(jlblNomeProfVisualEstatico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlblNomeProfVisual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                        .addComponent(jlblCpfProfEstatico)
                        .addGap(18, 18, 18)
                        .addComponent(jlblCpfProfVisual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                        .addGroup(jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                                .addComponent(jbtnAnteriorProf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnProxProf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlblContadorAtualView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlblContadorAtual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlblContadorTotalView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlblContadorTotalProfessores))
                            .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                                .addComponent(jlblAtuaView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlblAtua, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpnlContainerProfessorLayout.setVerticalGroup(
            jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlContainerProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnAnteriorProf)
                    .addComponent(jbtnProxProf)
                    .addComponent(jlblContadorAtualView)
                    .addComponent(jlblContadorAtual)
                    .addComponent(jlblContadorTotalView)
                    .addComponent(jlblContadorTotalProfessores))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlblNomeProfVisualEstatico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblNomeProfVisual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlblCpfProfEstatico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblCpfProfVisual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlContainerProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblAtuaView)
                    .addComponent(jlblAtua, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlbSupervisiona.setText("TURMAS SUPERVISIONADAS");

        jlstSupervisiona.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jlstSupervisiona);

        javax.swing.GroupLayout lpnlContainerMinistraLayout = new javax.swing.GroupLayout(lpnlContainerMinistra);
        lpnlContainerMinistra.setLayout(lpnlContainerMinistraLayout);
        lpnlContainerMinistraLayout.setHorizontalGroup(
            lpnlContainerMinistraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lpnlContainerMinistraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lpnlContainerMinistraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(lpnlContainerMinistraLayout.createSequentialGroup()
                        .addComponent(jlbSupervisiona)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        lpnlContainerMinistraLayout.setVerticalGroup(
            lpnlContainerMinistraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lpnlContainerMinistraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbSupervisiona)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlblTodosProfessores.setText("TODOS OS PROFESSORES");

        jlstTodosProfessores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlstTodosProfessoresValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jlstTodosProfessores);
        jlstTodosProfessores.setSelectedIndex(0);

        javax.swing.GroupLayout jpnlContanierTodosProfessoresLayout = new javax.swing.GroupLayout(jpnlContanierTodosProfessores);
        jpnlContanierTodosProfessores.setLayout(jpnlContanierTodosProfessoresLayout);
        jpnlContanierTodosProfessoresLayout.setHorizontalGroup(
            jpnlContanierTodosProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlContanierTodosProfessoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlContanierTodosProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblTodosProfessores)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlContanierTodosProfessoresLayout.setVerticalGroup(
            jpnlContanierTodosProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlContanierTodosProfessoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblTodosProfessores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpnlProfessorViewLayout = new javax.swing.GroupLayout(jpnlProfessorView);
        jpnlProfessorView.setLayout(jpnlProfessorViewLayout);
        jpnlProfessorViewLayout.setHorizontalGroup(
            jpnlProfessorViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProfessorViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlProfessorViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlProfessorViewLayout.createSequentialGroup()
                        .addComponent(lpnlContainerMinistra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(336, 336, 336))
                    .addGroup(jpnlProfessorViewLayout.createSequentialGroup()
                        .addGroup(jpnlProfessorViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblStatusVisual)
                            .addComponent(jpnlContainerProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                        .addComponent(jpnlContanierTodosProfessores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jpnlProfessorViewLayout.setVerticalGroup(
            jpnlProfessorViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProfessorViewLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpnlProfessorViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnlContanierTodosProfessores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpnlContainerProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lpnlContainerMinistra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                .addComponent(jlblStatusVisual)
                .addContainerGap())
        );

        jtbpProfessor.addTab("VISUALIZAR", jpnlProfessorView);

        jpnlProfessorCad.setMaximumSize(new java.awt.Dimension(800, 600));
        jpnlProfessorCad.setPreferredSize(new java.awt.Dimension(800, 600));

        jlblNomeProf.setText("NOME");

        jlblCpfProf.setText("CPF");

        jlblProfessor.setText("ATUA");

        jcbbProfessor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kids", "Regular", "Ambos" }));

        javax.swing.GroupLayout jpnlContainerProfCadLayout = new javax.swing.GroupLayout(jpnlContainerProfCad);
        jpnlContainerProfCad.setLayout(jpnlContainerProfCadLayout);
        jpnlContainerProfCadLayout.setHorizontalGroup(
            jpnlContainerProfCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlContainerProfCadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlContainerProfCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlContainerProfCadLayout.createSequentialGroup()
                        .addComponent(jlblNomeProf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtNomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnlContainerProfCadLayout.createSequentialGroup()
                        .addComponent(jlblCpfProf)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtCpfProf, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpnlContainerProfCadLayout.createSequentialGroup()
                .addComponent(jlblProfessor)
                .addGap(18, 18, 18)
                .addComponent(jcbbProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpnlContainerProfCadLayout.setVerticalGroup(
            jpnlContainerProfCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlContainerProfCadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlContainerProfCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNomeProf)
                    .addComponent(jtxtNomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlContainerProfCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblCpfProf)
                    .addComponent(jtxtCpfProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlContainerProfCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblProfessor)
                    .addComponent(jcbbProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jbtnCadastrar.setText("CADASTRAR");
        jbtnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCadastrarActionPerformed(evt);
            }
        });

        jbtnSalvarProf.setText("SALVAR");
        jbtnSalvarProf.setEnabled(false);
        jbtnSalvarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarProfActionPerformed(evt);
            }
        });

        jbtnDescartarProf.setText("DESCARTAR");
        jbtnDescartarProf.setEnabled(false);
        jbtnDescartarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDescartarProfActionPerformed(evt);
            }
        });

        jlblStatus.setText("Lembre-se de salvar as alterações realizadas.");

        javax.swing.GroupLayout jpnlProfessorCadLayout = new javax.swing.GroupLayout(jpnlProfessorCad);
        jpnlProfessorCad.setLayout(jpnlProfessorCadLayout);
        jpnlProfessorCadLayout.setHorizontalGroup(
            jpnlProfessorCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlProfessorCadLayout.createSequentialGroup()
                .addContainerGap(284, Short.MAX_VALUE)
                .addComponent(jlblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnDescartarProf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnSalvarProf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnCadastrar)
                .addContainerGap())
            .addGroup(jpnlProfessorCadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnlContainerProfCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlProfessorCadLayout.setVerticalGroup(
            jpnlProfessorCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProfessorCadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnlContainerProfCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 429, Short.MAX_VALUE)
                .addGroup(jpnlProfessorCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnCadastrar)
                    .addComponent(jbtnSalvarProf)
                    .addComponent(jbtnDescartarProf)
                    .addComponent(jlblStatus))
                .addContainerGap())
        );

        jtbpProfessor.addTab("CADASTRAR", jpnlProfessorCad);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtbpProfessor)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtbpProfessor)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jbtnAnteriorProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAnteriorProfActionPerformed
        int index = jlstTodosProfessores.getSelectedIndex() - 1;
        jbtnProxProf.setEnabled(false);
        jbtnAnteriorProf.setEnabled(false);
        try {
            carregaLabels(index);
            jlstTodosProfessores.setSelectedIndex(index);
        } catch (Exception ex) {
            jlblStatusVisual.setText(ex.getMessage());
            Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnAnteriorProfActionPerformed

    private void jbtnProxProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProxProfActionPerformed
        int index = jlstTodosProfessores.getSelectedIndex() + 1;
        jbtnProxProf.setEnabled(false);
        jbtnAnteriorProf.setEnabled(false);
        try {
            carregaLabels(index);
            jlstTodosProfessores.setSelectedIndex(index);
        } catch (Exception ex) {
            jlblStatusVisual.setText(ex.getMessage());
            Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnProxProfActionPerformed

    private void jbtnDescartarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDescartarProfActionPerformed
        //controlProfessor.eraseLst();
        try {
            controlProfessor.desserializaProfessor();
            statusArquivo(false, nInteracoesNaoSalvas + " alterações descartadas.");
            nInteracoesNaoSalvas = 0;
        } catch (Exception ex) {
            
            jlblStatus.setText(ex.getMessage());
            Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnDescartarProfActionPerformed

    private void jbtnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCadastrarActionPerformed
        try {
            controlProfessor.cadProfessor();
            nInteracoesNaoSalvas++;
            statusArquivo(true, nInteracoesNaoSalvas + " alterações NÃO salvas.");
            jtxtNomeProf.setText("");
            jtxtCpfProf.setText("");
        } catch (Exception ex) {
            jlblStatus.setText(ex.getMessage());
            Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnCadastrarActionPerformed

    private void jbtnSalvarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarProfActionPerformed
        try {
            controlProfessor.finalize();
            carregaProfessores();
            statusArquivo(false, nInteracoesNaoSalvas + " alterações salvas.");
            nInteracoesNaoSalvas = 0;
            jlstTodosProfessores.setSelectedIndex(0);
        } catch (Exception ex) {
            jlblStatus.setText(ex.getMessage());
            Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnSalvarProfActionPerformed

    private void jlstTodosProfessoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlstTodosProfessoresValueChanged
        try {
            carregaLabels(jlstTodosProfessores.getSelectedIndex());
            defineProxAnteriorEnable(jlstTodosProfessores.getSelectedIndex());
        } catch (Exception ex) {
            jlblStatusVisual.setText(ex.getMessage());
            Logger.getLogger(ViewProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jlstTodosProfessoresValueChanged

    public void statusArquivo(boolean estado, String message) {
        jbtnSalvarProf.setEnabled(estado);
        jbtnDescartarProf.setEnabled(estado);
        jlblStatus.setText(message);
    }

    //INICIO TAB1 VISUALIZAR
    //FIM TAB1 VISUALIZAR
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAnteriorProf;
    private javax.swing.JButton jbtnCadastrar;
    private javax.swing.JButton jbtnDescartarProf;
    private javax.swing.JButton jbtnProxProf;
    private javax.swing.JButton jbtnSalvarProf;
    private javax.swing.JComboBox jcbbProfessor;
    private javax.swing.JLabel jlbSupervisiona;
    private javax.swing.JLabel jlblAtua;
    private javax.swing.JLabel jlblAtuaView;
    private javax.swing.JLabel jlblContadorAtual;
    private javax.swing.JLabel jlblContadorAtualView;
    private javax.swing.JLabel jlblContadorTotalProfessores;
    private javax.swing.JLabel jlblContadorTotalView;
    private javax.swing.JLabel jlblCpfProf;
    private javax.swing.JLabel jlblCpfProfEstatico;
    private javax.swing.JLabel jlblCpfProfVisual;
    private javax.swing.JLabel jlblNomeProf;
    private javax.swing.JLabel jlblNomeProfVisual;
    private javax.swing.JLabel jlblNomeProfVisualEstatico;
    private javax.swing.JLabel jlblProfessor;
    private javax.swing.JLabel jlblStatus;
    private javax.swing.JLabel jlblStatusVisual;
    private javax.swing.JLabel jlblTodosProfessores;
    private javax.swing.JList jlstSupervisiona;
    private javax.swing.JList jlstTodosProfessores;
    private javax.swing.JPanel jpnlContainerProfCad;
    private javax.swing.JPanel jpnlContainerProfessor;
    private javax.swing.JPanel jpnlContanierTodosProfessores;
    private javax.swing.JPanel jpnlProfessorCad;
    private javax.swing.JPanel jpnlProfessorView;
    private javax.swing.JTabbedPane jtbpProfessor;
    private javax.swing.JTextField jtxtCpfProf;
    private javax.swing.JTextField jtxtNomeProf;
    private javax.swing.JPanel lpnlContainerMinistra;
    // End of variables declaration//GEN-END:variables
}
